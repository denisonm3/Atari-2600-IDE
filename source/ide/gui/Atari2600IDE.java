/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ide.gui;

import ide.Montador;
import ide.Projeto;
import ide.Recursos;
import java.io.FileInputStream;
import java.io.IOException;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.text.BadLocationException;

/**
 *
 * @author Denison
 */
public class Atari2600IDE extends javax.swing.JFrame {

    private final ProjectsList projetos;
    private final NewProject newProjectFrame;
    private Projeto projetoAtual;
    private final JStella jStella2;

    /**
     * Creates new form Atari2600IDE
     */
    public Atari2600IDE() {
        projetos = new ProjectsList();
        jStella2 = new JStella();
        newProjectFrame = new NewProject(this, true);
        newProjectFrame.setProjetos(projetos);
        projetoAtual = null;
        initComponents();
        jTabbedPane1.addTab("JStella", jStella2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        javax.swing.JButton jButtonSave = new javax.swing.JButton();
        javax.swing.JButton jButtonPlay = new javax.swing.JButton();
        jButtonStop = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        javax.swing.JTextPane jTextPane1 = new javax.swing.JTextPane();
        jScrollPaneNotificacoes = new javax.swing.JScrollPane();
        jTextAreaNotificacoes = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        jListProjetos = new javax.swing.JList();
        jMenuBar1 = new javax.swing.JMenuBar();
        javax.swing.JMenu jMenuFile = new javax.swing.JMenu();
        jMenuItemNew = new javax.swing.JMenuItem();
        jMenuItemSave = new javax.swing.JMenuItem();
        jMenuItemExclude = new javax.swing.JMenuItem();
        jMenuItemClose = new javax.swing.JMenuItem();
        jMenuItemExit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItemUndo = new javax.swing.JMenuItem();
        jMenuItemRedo = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItemCut = new javax.swing.JMenuItem();
        jMenuItemCopy = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(ide.Recursos.LOGO.getImage());
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        jButtonSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ide/gui/imgs/document-save_1.png"))); // NOI18N
        jButtonSave.setText("Save");
        jButtonSave.setFocusable(false);
        jButtonSave.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButtonSave.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });
        jToolBar1.add(jButtonSave);

        jButtonPlay.setForeground(new java.awt.Color(0, 153, 0));
        jButtonPlay.setText("Play ►");
        jButtonPlay.setFocusable(false);
        jButtonPlay.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonPlay.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonPlay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPlayActionPerformed(evt);
            }
        });
        jToolBar1.add(jButtonPlay);

        jButtonStop.setForeground(new java.awt.Color(255, 0, 0));
        jButtonStop.setText("Stop ▇");
        jButtonStop.setEnabled(false);
        jButtonStop.setFocusable(false);
        jButtonStop.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonStop.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonStopActionPerformed(evt);
            }
        });
        jToolBar1.add(jButtonStop);

        jTabbedPane1.setToolTipText("");
        jTabbedPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });

        jTextPane1.setEditable(false);
        jTextPane1.setContentType("text/html"); // NOI18N
        try {
            jTextPane1.setPage(Recursos.HTML);
        } catch (java.io.IOException e1) {
            e1.printStackTrace();
        }
        jScrollPane2.setViewportView(jTextPane1);

        jTabbedPane1.addTab("Welcome", jScrollPane2);

        jTextAreaNotificacoes.setColumns(20);
        jTextAreaNotificacoes.setRows(5);
        jTextAreaNotificacoes.setText("Welcome\n\nAtari 2600 IDE v1.0\n\n");
        jScrollPaneNotificacoes.setViewportView(jTextAreaNotificacoes);

        jListProjetos.setModel(projetos);
        jListProjetos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jListProjetos.setCellRenderer(projetos);
        jListProjetos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListProjetosMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jListProjetos);

        jMenuFile.setText("File");

        jMenuItemNew.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ide/gui/imgs/icon_project.png"))); // NOI18N
        jMenuItemNew.setText("New Project...");
        jMenuItemNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemNewActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemNew);

        jMenuItemSave.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ide/gui/imgs/document-save_1.png"))); // NOI18N
        jMenuItemSave.setText("Save");
        jMenuItemSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSaveActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemSave);

        jMenuItemExclude.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_DELETE, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemExclude.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ide/gui/imgs/edit-delete.png"))); // NOI18N
        jMenuItemExclude.setText("Exclude");
        jMenuItemExclude.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemExcludeActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemExclude);

        jMenuItemClose.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ide/gui/imgs/document-close.png"))); // NOI18N
        jMenuItemClose.setText("Close");
        jMenuItemClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCloseActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemClose);

        jMenuItemExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        jMenuItemExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ide/gui/imgs/window-close.png"))); // NOI18N
        jMenuItemExit.setText("Exit");
        jMenuItemExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemExitActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemExit);

        jMenuBar1.add(jMenuFile);

        jMenu2.setText("Edit");

        jMenuItemUndo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemUndo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ide/gui/imgs/edit-undo.png"))); // NOI18N
        jMenuItemUndo.setText("Undo");
        jMenuItemUndo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemUndoActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItemUndo);

        jMenuItemRedo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Y, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemRedo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ide/gui/imgs/edit-redo.png"))); // NOI18N
        jMenuItemRedo.setText("Redo");
        jMenuItemRedo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemRedoActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItemRedo);
        jMenu2.add(jSeparator1);

        jMenuItemCut.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemCut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ide/gui/imgs/edit-cut.png"))); // NOI18N
        jMenuItemCut.setText("Cut");
        jMenuItemCut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCutActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItemCut);

        jMenuItemCopy.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemCopy.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ide/gui/imgs/edit-copy.png"))); // NOI18N
        jMenuItemCopy.setText("Copy");
        jMenuItemCopy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCopyActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItemCopy);

        jMenuItem7.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ide/gui/imgs/edit-paste.png"))); // NOI18N
        jMenuItem7.setText("Paste");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem7);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPaneNotificacoes, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1)
                    .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 769, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTabbedPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPaneNotificacoes, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonPlayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPlayActionPerformed
        if (projetoAtual != null) {
            try {
                if (!projetoAtual.getSalvo()) {
                    salvar(projetoAtual);
                }
                System.out.println("\nAssemble...\n");
                String result = Montador.getCreateBIN(projetoAtual);
                if (result.endsWith("DASM V2.20.07, Macro Assembler (C)1988-2003\nComplete.\n")) {
                    System.out.println(result);
                    try (FileInputStream zFIS = new FileInputStream(projetoAtual.getRomFile())) {
                        jStella2.getIntercessor().playROM(zFIS);
                        jTabbedPane1.setSelectedIndex(jTabbedPane1.getTabCount() - 1);
                        jButtonStop.setEnabled(true);
                        zFIS.close();
                    }
                } else {
                    System.err.println(result);
                }
            } catch (IOException ex) {
                System.err.println(ex.getMessage());
            }
        } else {
            System.err.println("First open a project!");
        }
    }//GEN-LAST:event_jButtonPlayActionPerformed

    private void jButtonStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonStopActionPerformed
        jStella2.closeRom();
        jButtonStop.setEnabled(false);
        if (projetoAtual != null) {
            for (int i = 0; i < jTabbedPane1.getTabCount(); i++) {
                if (jTabbedPane1.getTitleAt(i).equals(projetoAtual.getNome())) {
                    jTabbedPane1.setSelectedIndex(i);
                    break;
                }
            }
        } else {
            jTabbedPane1.setSelectedIndex(0);
        }
    }//GEN-LAST:event_jButtonStopActionPerformed

    private void jListProjetosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListProjetosMouseClicked
        if (evt.getClickCount() == 2) {
            if (!foco((Projeto) jListProjetos.getSelectedValue())) {
                abrir((Projeto) jListProjetos.getSelectedValue());
                System.out.println(projetoAtual.getNome() + " is open");
            }
        } else {
            Projeto proj = (Projeto) jListProjetos.getSelectedValue();
            foco(proj);
        }
    }//GEN-LAST:event_jListProjetosMouseClicked

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged
        int index = jTabbedPane1.getSelectedIndex();
        if (index > 0 && index < jTabbedPane1.getTabCount()) {
            if (projetoAtual == null || !projetoAtual.getNome().equals(jTabbedPane1.getTitleAt(index))) {
                String projNome = jTabbedPane1.getTitleAt(index);
                for (int i = 0; i < projetos.getSize(); i++) {
                    Projeto proj = (Projeto) projetos.get(i);
                    if (proj.getNome().equals(projNome)) {
                        setTitle(proj.toString());
                        projetoAtual = proj;
                    }
                }
            }
        }
    }//GEN-LAST:event_jTabbedPane1StateChanged

    private void jMenuItemNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemNewActionPerformed
        int projs = projetos.getSize();
        newProjectFrame.setVisible(true);
        if (projetos.getSize() > projs) {
            abrir(projetos.get(projs));
        }
    }//GEN-LAST:event_jMenuItemNewActionPerformed

    private void jMenuItemSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSaveActionPerformed
        if (projetoAtual != null && !projetoAtual.getSalvo()) {
            salvar(projetoAtual);
        }
    }//GEN-LAST:event_jMenuItemSaveActionPerformed

    private void jMenuItemCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCloseActionPerformed
        if (projetoAtual != null) {
            if (!projetoAtual.getSalvo()) {
                int escolha = JOptionPane.showConfirmDialog(this, "Do you want to save changes?");
                if (escolha == JOptionPane.YES_OPTION) {
                    salvar(projetoAtual);
                }
            }
            for (int i = 0; i < jTabbedPane1.getTabCount(); i++) {
                if (jTabbedPane1.getTitleAt(i).equals(projetoAtual.getNome())) {
                    jTabbedPane1.removeTabAt(i);
                    setTitle("Atari 2600 IDE");
                    System.out.println(projetoAtual.getNome() + " is closed");
                    projetoAtual = null;
                    break;
                }
            }
        }
    }//GEN-LAST:event_jMenuItemCloseActionPerformed

    private void jMenuItemExcludeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemExcludeActionPerformed
        Projeto proj = (Projeto) jListProjetos.getSelectedValue();
        if (proj != null) {
            int opcao = JOptionPane.showConfirmDialog(this,
                    "Do you really want to delete the project " + proj.getNome() + " ?",
                    "Confirm",
                    JOptionPane.YES_NO_OPTION);
            if (opcao == JOptionPane.YES_OPTION) {
                //Caso seja o projeto atual tira a referencia
                if (proj.equals(projetoAtual)) {
                    setTitle("Atari 2600 IDE");
                    projetoAtual = null;
                }
                //Fecha a aba aberta
                for (int i = 0; i < jTabbedPane1.getTabCount(); i++) {
                    if (jTabbedPane1.getTitleAt(i).equals(proj.getNome())) {
                        jTabbedPane1.removeTabAt(i);
                        break;
                    }
                }
                //Deleta arquivos
                proj.delete();
                //Remove dos projetos
                projetos.removeElement(proj);
            }
        }
    }//GEN-LAST:event_jMenuItemExcludeActionPerformed

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        jMenuItemSaveActionPerformed(evt);
    }//GEN-LAST:event_jButtonSaveActionPerformed

    private void jMenuItemUndoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemUndoActionPerformed
        JTextPane text = getSelectText();
        if (text != null) {
            ((DocumentAssembly6502) text.getDocument()).undo();
        }
    }//GEN-LAST:event_jMenuItemUndoActionPerformed

    private void jMenuItemRedoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemRedoActionPerformed
        JTextPane text = getSelectText();
        if (text != null) {
            ((DocumentAssembly6502) text.getDocument()).redo();
        }
    }//GEN-LAST:event_jMenuItemRedoActionPerformed

    private void jMenuItemCutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCutActionPerformed
        JTextPane text = getSelectText();
        if (text != null) {
            text.cut();
        }
    }//GEN-LAST:event_jMenuItemCutActionPerformed

    private void jMenuItemCopyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCopyActionPerformed
        JTextPane text = getSelectText();
        if (text != null) {
            text.copy();
        }
    }//GEN-LAST:event_jMenuItemCopyActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        JTextPane text = getSelectText();
        if (text != null) {
            text.paste();
        }
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItemExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemExitActionPerformed
        boolean cancel = false;
        for(int i =0; i < projetos.getSize(); i++) {
            Projeto proj = projetos.get(i);
            if (!proj.getSalvo()) {
                int escolha = JOptionPane.showConfirmDialog(this, "Do you want to save changes on "+proj.getNome()+"?");
                if (escolha == JOptionPane.YES_OPTION) {
                    salvar(projetoAtual);
                } else if(escolha == JOptionPane.CANCEL_OPTION) {
                    cancel = true;
                    break;
                }
            }
        }
        if(!cancel) {
            System.exit(0);
        }
    }//GEN-LAST:event_jMenuItemExitActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        jMenuItemExitActionPerformed(null);
    }//GEN-LAST:event_formWindowClosing

    private void modificar() {
        if (projetoAtual != null && projetoAtual.getSalvo()) {
            projetoAtual.setSalvo(false);
            setTitle(projetoAtual.toString());
        }
    }

    /**
     * Cria nova tab para o projeto
     *
     * @param proj
     */
    private void abrir(Projeto proj) {
        projetoAtual = proj;
        setTitle(projetoAtual.toString());
        JTextPane projctPane = new JTextPane();
        JScrollPane scroll = new JScrollPane(projctPane);
        DocumentAssembly6502 doc = new DocumentAssembly6502();
        doc.configurarTextComponent(projctPane);
        try {
            doc.insertString(0, projetoAtual.getSource(), null);
        } catch (BadLocationException ex) {
            System.err.println(ex.getMessage());
        }
        // Evento verifica alterações
        doc.addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                modificar();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                modificar();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
            }
        });
        scroll.setRowHeaderView(doc.getLinhas());
        scroll.setColumnHeaderView(doc.getCursor());
        jTabbedPane1.insertTab(projetoAtual.getNome(), Recursos.ICON, scroll, "tooltip", 1);
        jTabbedPane1.setSelectedIndex(1);
    }

    private boolean foco(Projeto proj) {
        for (int i = 0; i < jTabbedPane1.getTabCount(); i++) {
            if (jTabbedPane1.getTitleAt(i).equals(proj.getNome())) {
                projetoAtual = proj;
                setTitle(proj.toString());
                jTabbedPane1.setSelectedIndex(i);
                return true;
            }
        }
        return false;
    }

    private void salvar(Projeto proj) {
        JTextPane text = null;
        for (int i = 0; i < jTabbedPane1.getTabCount(); i++) {
            if (jTabbedPane1.getTitleAt(i).equals(proj.getNome())) {
                JScrollPane jsp = (JScrollPane) jTabbedPane1.getComponentAt(i);
                text = (JTextPane) jsp.getViewport().getView();
                break;
            }
        }
        if (text != null) {
            proj.save(text.getText());
            setTitle(proj.toString());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonStop;
    private javax.swing.JList jListProjetos;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItemClose;
    private javax.swing.JMenuItem jMenuItemCopy;
    private javax.swing.JMenuItem jMenuItemCut;
    private javax.swing.JMenuItem jMenuItemExclude;
    private javax.swing.JMenuItem jMenuItemExit;
    private javax.swing.JMenuItem jMenuItemNew;
    private javax.swing.JMenuItem jMenuItemRedo;
    private javax.swing.JMenuItem jMenuItemSave;
    private javax.swing.JMenuItem jMenuItemUndo;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPaneNotificacoes;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextAreaNotificacoes;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables

    public JTextArea getNotificacoes() {
        return jTextAreaNotificacoes;
    }

    private JTextPane getSelectText() {
        int index = jTabbedPane1.getSelectedIndex();
        if (index > 0 && index < jTabbedPane1.getTabCount()) {
            JScrollPane jsp = (JScrollPane) jTabbedPane1.getSelectedComponent();
            return (JTextPane) jsp.getViewport().getView();
        }
        return null;
    }

}
